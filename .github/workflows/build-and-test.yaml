name: Build & Test

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['*']
  workflow_dispatch:

env:
  APP_NAME: d_merge
  BUILD_PROFILE: release-no-lto
  CARGO_TERM_COLOR: always

jobs:
  lint:
    strategy:
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4.2.2
        with:
          submodules: true
      - name: Setup environment
        uses: ./.github/actions/setup-deps
        with:
          platform: ${{ matrix.platform }}
          build_profile: debug
          install_front_deps: false

      - name: Check format
        run: cargo fmt --all -- --check
      - name: Lint Check
        run: cargo clippy --workspace -- -D warnings

  test:
    strategy:
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4.2.2
        with:
          submodules: true
      - name: Setup environment
        uses: ./.github/actions/setup-deps
        with:
          platform: ${{ matrix.platform }}
          build_profile: debug
          install_front_deps: false

      - name: Install nextest(Parallel Test Execution CLI)
        uses: taiki-e/install-action@nextest

      - name: Test(Rust)
        run: cargo nextest run --workspace

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.2
        if: runner.os == 'Linux'
        with:
          name: d_merge-debug-files
          path: ./dummy/

  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4.2.2
        with:
          submodules: true
      - name: Setup environment
        uses: ./.github/actions/setup-deps
        with:
          platform: ${{ matrix.platform }}
          build_profile: ${{ env.BUILD_PROFILE }}

      - name: Test(Node.js)
        run: npm test
      - name: Build GUI
        run: npm run build

      - name: Move exe -> ./build
        uses: ./.github/actions/setup-release
        with:
          app_name: d_merge
          build_profile: ${{ env.BUILD_PROFILE }}

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: ${{ env.APP_NAME }}-${{ runner.os }}
          # to include .keep file
          include-hidden-files: true
          path: |
            ./build/

  electron:
    strategy:
      fail-fast: false
      matrix:
        # platform: [macos-latest, ubuntu-latest, windows-latest]
        platform: [macos-latest, windows-latest] # Linux build unknown error
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4.2.2
        with:
          submodules: true
      - name: Setup environment
        uses: ./.github/actions/setup-deps
        with:
          platform: ${{ matrix.platform }}
          build_profile: release
          cache_key_suffix: 'electron'

      - name: Build GUI
        run: npm run build:electron

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: ${{ env.APP_NAME }}-${{ runner.os }}-electron
          # to include .keep file
          include-hidden-files: true
          path: |
            ${{ github.workspace }}/gui/backend/electron/dist/*.zip
